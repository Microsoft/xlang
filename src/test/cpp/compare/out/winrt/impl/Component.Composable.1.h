// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.000000.0
#pragma once
#include "winrt/impl/Component.Composable.0.h"
namespace winrt::Component::Composable
{
    struct WINRT_EBO IBase :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBase>
    {
        IBase(std::nullptr_t = nullptr) noexcept {}
        IBase(take_ownership_from_abi_t, void* ptr) noexcept : Windows::Foundation::IInspectable(take_ownership_from_abi, ptr) {}
    };
    struct WINRT_EBO IBaseFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IBaseFactory>
    {
        IBaseFactory(std::nullptr_t = nullptr) noexcept {}
        IBaseFactory(take_ownership_from_abi_t, void* ptr) noexcept : Windows::Foundation::IInspectable(take_ownership_from_abi, ptr) {}
    };
    struct WINRT_EBO IDerived :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDerived>
    {
        IDerived(std::nullptr_t = nullptr) noexcept {}
        IDerived(take_ownership_from_abi_t, void* ptr) noexcept : Windows::Foundation::IInspectable(take_ownership_from_abi, ptr) {}
    };
}
