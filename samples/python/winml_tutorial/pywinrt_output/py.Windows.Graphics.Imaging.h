// WARNING: Please don't edit this file. It was generated by Python/WinRT

#pragma once

#include "pybase.h"
#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif
#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif
#if __has_include("py.Windows.Graphics.DirectX.Direct3D11.h")
#include "py.Windows.Graphics.DirectX.Direct3D11.h"
#endif
#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#include <winrt/Windows.Graphics.Imaging.h>

int initialize_Windows_Graphics_Imaging(PyObject* module);

namespace py
{
    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapBuffer>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapCodecInformation>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapDecoder>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapEncoder>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapFrame>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapProperties>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapPropertiesView>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapPropertySet>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapTransform>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapTypedValue>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::ImageStream>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::PixelDataProvider>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::SoftwareBitmap>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapBuffer>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapCodecInformation>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapDecoder>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapDecoderStatics>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapDecoderStatics2>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapEncoder>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapEncoderStatics>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapEncoderStatics2>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapEncoderWithSoftwareBitmap>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapFrame>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapFrameWithSoftwareBitmap>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapProperties>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapPropertiesView>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapTransform>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapTypedValue>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IBitmapTypedValueFactory>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::IPixelDataProvider>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::ISoftwareBitmap>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::ISoftwareBitmapFactory>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::ISoftwareBitmapStatics>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapBounds>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapPlaneDescription>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct winrt_type<winrt::Windows::Graphics::Imaging::BitmapSize>
    {
        static PyTypeObject* python_type;

        static PyTypeObject* get_python_type()
        {
            return python_type;
        }
    };

    template<>
    struct converter<winrt::Windows::Graphics::Imaging::BitmapBounds>
    {
        static PyObject* convert(winrt::Windows::Graphics::Imaging::BitmapBounds instance) noexcept;
        static winrt::Windows::Graphics::Imaging::BitmapBounds convert_to(PyObject* obj);
    };
    
    template<>
    struct converter<winrt::Windows::Graphics::Imaging::BitmapPlaneDescription>
    {
        static PyObject* convert(winrt::Windows::Graphics::Imaging::BitmapPlaneDescription instance) noexcept;
        static winrt::Windows::Graphics::Imaging::BitmapPlaneDescription convert_to(PyObject* obj);
    };
    
    template<>
    struct converter<winrt::Windows::Graphics::Imaging::BitmapSize>
    {
        static PyObject* convert(winrt::Windows::Graphics::Imaging::BitmapSize instance) noexcept;
        static winrt::Windows::Graphics::Imaging::BitmapSize convert_to(PyObject* obj);
    };
    
}
